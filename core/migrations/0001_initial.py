# Generated by Django 4.2 on 2023-04-22 14:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('telefone', models.IntegerField(verbose_name='Telefone')),
                ('imagem', models.ImageField(null=True, upload_to='', verbose_name='Imagem')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bairro', models.CharField(max_length=80, verbose_name='Bairro')),
            ],
        ),
        migrations.CreateModel(
            name='Cadastros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateField(verbose_name='Data_Cadastro')),
                ('titulo', models.CharField(max_length=50, verbose_name='Titulo')),
                ('descricao', models.CharField(max_length=300, verbose_name='Descricao')),
                ('tipo_do_trabalho', models.CharField(max_length=50, verbose_name='Tipo_trabalho')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categorias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
            ],
        ),
        migrations.CreateModel(
            name='Editoras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_editora', models.CharField(max_length=100, verbose_name='Nome_editora')),
            ],
        ),
        migrations.CreateModel(
            name='Instituicoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_instituicao', models.CharField(max_length=200, verbose_name='Nome_instituicao')),
            ],
        ),
        migrations.CreateModel(
            name='Pais_Regiao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pais_regiao', models.CharField(max_length=120, verbose_name='Pais_regiao')),
            ],
        ),
        migrations.CreateModel(
            name='Pesquisadores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curriculo', models.CharField(max_length=150, verbose_name='Curriculo')),
                ('projetos_vinculados', models.CharField(max_length=200, verbose_name='Projetos_vinculados')),
                ('artigos_vinculados', models.CharField(max_length=200, verbose_name='Artigos_vinculados')),
                ('biografia', models.CharField(max_length=300, verbose_name='Biografia')),
                ('imagem_pesquisador', models.ImageField(null=True, upload_to='', verbose_name='Imagem_Pesquisador')),
            ],
        ),
        migrations.CreateModel(
            name='SobreOGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao_grupo', models.CharField(max_length=500, verbose_name='Descricao_grupo')),
                ('imagem_grupo', models.ImageField(upload_to='', verbose_name='Imagem_grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Projetos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cadastros')),
                ('pesquisadores', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.pesquisadores')),
            ],
        ),
        migrations.AddField(
            model_name='pesquisadores',
            name='sobreogrupo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sobreogrupo'),
        ),
        migrations.AddField(
            model_name='pesquisadores',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Noticias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fonte', models.CharField(max_length=150, verbose_name='Fonte')),
                ('publico_alvo', models.CharField(max_length=150, verbose_name='Publico_alvo')),
                ('data_validacao_noticia', models.DateField(verbose_name='Data_validacao_noticia')),
                ('cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cadastros')),
            ],
        ),
        migrations.CreateModel(
            name='Eventos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formato', models.CharField(max_length=50, verbose_name='Formato')),
                ('local', models.CharField(max_length=100, verbose_name='Local')),
                ('data_evento', models.DateField(verbose_name='Data_evento')),
                ('cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cadastros')),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=120, verbose_name='Estado')),
                ('pais_regiao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.pais_regiao')),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cep', models.IntegerField(verbose_name='CEP')),
                ('endereco', models.CharField(max_length=120, verbose_name='endereco')),
                ('numero', models.IntegerField(verbose_name='Numero')),
                ('complemento', models.CharField(max_length=200, null=True, verbose_name='Complemento')),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.bairro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidade', models.CharField(max_length=120, verbose_name='Cidade')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.estado')),
            ],
        ),
        migrations.AddField(
            model_name='bairro',
            name='cidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cidade'),
        ),
        migrations.CreateModel(
            name='Anexos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anexos', models.BinaryField(verbose_name='Anexos')),
                ('descricao', models.CharField(max_length=350, verbose_name='Descricao')),
                ('nome_periodico', models.CharField(max_length=50, verbose_name='Nome_periodico')),
                ('resumo', models.CharField(max_length=400, verbose_name='Resumo')),
                ('data_validacao_anexo', models.DateField(verbose_name='Data_validacao_anexo')),
                ('issn', models.CharField(max_length=70, verbose_name='ISSN')),
                ('cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cadastros')),
                ('editoras', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.editoras')),
                ('instituicoes', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.instituicoes')),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='categoria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categorias'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
